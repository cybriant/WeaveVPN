{"remainingRequest":"/Users/hayesroach/Software/SDN/node_modules/babel-loader/lib/index.js!/Users/hayesroach/Software/SDN/src/store/index.js","dependencies":[{"path":"/Users/hayesroach/Software/SDN/src/store/index.js","mtime":1581561843619},{"path":"/Users/hayesroach/Software/SDN/.babelrc","mtime":1565878572000},{"path":"/Users/hayesroach/Software/SDN/node_modules/cache-loader/dist/cjs.js","mtime":1581291330309},{"path":"/Users/hayesroach/Software/SDN/node_modules/babel-loader/lib/index.js","mtime":1581545819419}],"contextDependencies":[],"result":["import _Promise from \"/Users/hayesroach/Software/SDN/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios'; //import axios from 'axios'\n\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    status: '',\n    token: localStorage.getItem('token') || '',\n    user: {}\n  },\n  // MUTATIONS - Change the state of a vuex store\n  mutations: {\n    auth_request: function auth_request(state) {\n      state.status = 'loading';\n    },\n    auth_success: function auth_success(state) {\n      state.status = 'success';\n      state.token = 'token';\n      state.user = 'user';\n    },\n    auth_error: function auth_error(state) {\n      state.status = 'error';\n    },\n    logout: function logout(state) {\n      state.status = '';\n      state.token = '';\n    }\n  },\n  // ACTIONS\n  actions: {\n    login: function login(_ref, user) {\n      var commit = _ref.commit;\n      return new _Promise(function (resolve, reject) {\n        commit('auth_request');\n        axios({\n          url: 'http://0.0.0.0:3000/authenticate',\n          crossdomain: true,\n          data: user,\n          method: 'POST'\n        }).then(function (response) {\n          console.log(response);\n          var token = response.data.token;\n          var user = response.data.user;\n          localStorage.setItem('token', token);\n          axios.defaults.headers.common['Authorization'] = token;\n          commit('auth_success', token, user);\n          resolve(response);\n        }).catch(function (error) {\n          commit('auth_error');\n          localStorage.removeItem('token');\n          reject(error);\n        });\n      });\n    },\n    logout: function logout(_ref2) {\n      var commit = _ref2.commit;\n      return new _Promise(function (resolve) {\n        commit('logout');\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n        resolve();\n      });\n    }\n  },\n  // Getters - Get the value of the vuex state\n  getters: {\n    isLoggedIn: function isLoggedIn(state) {\n      return !!state.token;\n    },\n    authStatus: function authStatus(state) {\n      return state.status;\n    }\n  },\n  modules: {}\n});",{"version":3,"sources":["/Users/hayesroach/Software/SDN/src/store/index.js"],"names":["Vue","Vuex","axios","use","Store","state","status","token","localStorage","getItem","user","mutations","auth_request","auth_success","auth_error","logout","actions","login","commit","resolve","reject","url","crossdomain","data","method","then","response","console","log","setItem","defaults","headers","common","catch","error","removeItem","getters","isLoggedIn","authStatus","modules"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\n//import axios from 'axios'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    status: '',\n    token: localStorage.getItem('token') || '',\n    user: {}\n  },\n\n  // MUTATIONS - Change the state of a vuex store\n  mutations: {\n    auth_request(state) {\n      state.status = 'loading'\n    },\n    auth_success(state) {\n      state.status = 'success'\n      state.token = 'token'\n      state.user = 'user'\n    },\n    auth_error(state) {\n      state.status = 'error'\n    },\n    logout(state) {\n      state.status = ''\n      state.token = ''\n    }\n  },\n\n  // ACTIONS\n  actions: {\n    login({commit}, user) {\n      return new Promise((resolve, reject) => {\n        commit('auth_request');\n        axios({url: 'http://0.0.0.0:3000/authenticate', crossdomain: true, data: user, method: 'POST'})\n        .then(response => {\n\n          console.log(response);\n          const token = response.data.token;\n          const user = response.data.user;\n          localStorage.setItem('token', token);\n          axios.defaults.headers.common['Authorization'] = token;\n          commit('auth_success', token, user);\n          resolve(response);\n        })\n        .catch(error => {\n          commit('auth_error');\n          localStorage.removeItem('token');\n          reject(error);\n        })\n      })\n    },\n\n    logout({commit}) {\n      return new Promise((resolve) => {\n        commit('logout');\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n        resolve();\n      })\n    }\n  },\n\n  // Getters - Get the value of the vuex state\n  getters: {\n    isLoggedIn: state => !!state.token,\n    authStatus: state => state.status,\n  },\n  modules: {\n\n  }\n})\n"]}]}